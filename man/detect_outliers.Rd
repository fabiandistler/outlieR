% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/detect_outliers.R
\name{detect_outliers}
\alias{detect_outliers}
\title{Detect Outliers Using Isolation Forest}
\usage{
detect_outliers(
  data,
  target_cols = NULL,
  contamination = 0.1,
  tune = TRUE,
  tune_method = c("grid", "random", "bayesian"),
  n_trees = 100,
  sample_size = "auto",
  max_depth = "auto",
  seed = NULL,
  parallel = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{data}{A data.frame or data.table containing the data to analyze}

\item{target_cols}{Character vector of column names to analyze. If NULL (default),
all numeric columns are used}

\item{contamination}{Numeric between 0 and 1. Expected proportion of outliers.
Used for automatic threshold determination. Default: 0.1}

\item{tune}{Logical. Should hyperparameters be tuned? Default: TRUE}

\item{tune_method}{Character. Tuning method: "grid", "random", or "bayesian". Default: "grid"}

\item{n_trees}{Integer. Number of trees in isolation forest. Default: 100}

\item{sample_size}{Integer or "auto". Sample size for each tree. Default: "auto"}

\item{max_depth}{Integer or "auto". Maximum tree depth. Default: "auto"}

\item{seed}{Integer. Random seed for reproducibility. Default: NULL}

\item{parallel}{Logical. Use parallel processing for tuning? Default: TRUE}

\item{verbose}{Logical. Print progress messages? Default: TRUE}
}
\value{
An object of class "outlier_detector" containing:
\item{model}{The trained isotree model}
\item{scores}{Anomaly scores for each observation}
\item{outliers}{Logical vector indicating outlier status}
\item{outlier_details}{data.table with detailed outlier information per row and column}
\item{threshold}{The anomaly score threshold used}
\item{params}{Model parameters used}
\item{metrics}{Performance metrics}
\item{data}{Original data (optionally stored)}
}
\description{
Main function to detect outliers in tabular data using isotree with
automatic parameter tuning and comprehensive diagnostics.
}
\examples{
\dontrun{
library(outlieR)

# Basic usage
result <- detect_outliers(mtcars)

# With specific columns and custom contamination
result <- detect_outliers(
  data = iris,
  target_cols = c("Sepal.Length", "Sepal.Width"),
  contamination = 0.05
)

# Without automatic tuning
result <- detect_outliers(
  data = mtcars,
  tune = FALSE,
  n_trees = 200,
  max_depth = 10
)
}

}
